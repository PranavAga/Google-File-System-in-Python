syntax = "proto3";

package gfs;

message Empty {}

message StringRequest {
  string message = 1;
}

message StringResponse {
  string message = 1;
}

message ReadRequest {
  string file_path = 1;
  int64 offset = 2;
  int64 num_bytes = 3;
}

message ReadResponse {
  bytes data = 1;
}

message HeartbeatRequest {
  string chunkserver_id = 1;
  repeated string chunk_handle_list = 2;
}

message HeartbeatResponse {
  bool success = 1;
  repeated string invalid_chunk_handles = 2;
}

message ChunkData {
  string chunk_handle = 1;
  bytes data = 2;
  int64 version = 3;
}

service MasterServer {
  // Client to Master RPCs
  rpc ListFiles(StringRequest) returns (StringResponse);
  rpc CreateFile(StringRequest) returns (StringResponse);
  rpc AppendToFile(StringRequest) returns (StringResponse);
  rpc ReadFromFile(ReadRequest) returns (ReadResponse);
  rpc DeleteFile(StringRequest) returns (StringResponse);

  // Chunkserver to Master RPCs
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
}

service ChunkServer {
  // Client to Chunkserver RPCs
  rpc PushChunk(ChunkData) returns (StringResponse);
  rpc ReadChunk(StringRequest) returns (ChunkData);

  // Chunkserver to Chunkserver RPCs
  rpc ReplicateChunk(ChunkData) returns (StringResponse);
}